// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  clerkUserId String   @unique
  email       String   @unique
  name        String?
  imageUrl    String?
  industry    String? //it includes users industry and sub industries
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // profile field   
  bio        String?
  experience Int? // "years" of experience
  skills     String[] // Array of Skills

  assessments Assessment[]
  resume      Resume?
  coverLetter CoverLetter[]

  industryInsights IndustryInsight[] @relation("UserIndustries")
}

model Assessment {
  id             String   @id @default(cuid())
  userId         String
  user           User     @relation(fields: [userId], references: [id])
  quizScore      Float // overall quiz score
  questions      Json[] // Array of {question, answer , userAnswer , isCorrect}
  category       String // "Technical", "Behavioral", etc
  improvementTip String? // AI-generated improvement tip
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@index([userId])
}

model Resume {
  id        String   @id @default(cuid())
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id])
  content   String   @db.Text
  atsScore  Float?
  feedback  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CoverLetter {
  id             String   @id @default(cuid())
  userId         String
  user           User     @relation(fields: [userId], references: [id])
  content        String
  jobDescription String?
  companyName    String
  jobTitle       String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@index([userId])
}

model IndustryInsight {
  id       String @id @default(cuid())
  industry String @unique // the industry this data belongs to

  users User[] @relation("UserIndustries")

  // Salary data
  salaryRanges Json[]

  // industry trends
  growthRate  Float // industry growth rate
  demandLevel DemandLevel // high , medium , low
  topSkills   String[] // Most in-demand skills 

  // Market conditions
  marketOutlook MarketOutLook
  keyTrends     String[]

  // Learning suggestions
  recommendedSkills String[] // Skills recommended for industry

  lastUpdated DateTime @default(now())
  nextUpdated DateTime // Scheduled update time

  @@index([industry])
}

enum DemandLevel {
  HIGH
  MEDIUM
  LOW
}

enum MarketOutLook {
  POSITIVE
  NEUTRAL
  NEGATIVE
}
